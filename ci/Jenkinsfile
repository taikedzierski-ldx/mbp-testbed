prepared_node_tests = [:]

def prepare_all_nodes_for_test(agent_label) {
    def nodelist = nodesByLabel(label: "${agent_label}")

    for (agentName in nodelist) {
        agentName = (String) agentName

        println "Preparing task for " + agentName
        print "Content check: "
        println ((String) ["maxim-ci-ldx2-s008", "maxim-ci-ldx2-s009", "maxim-ci-ldx2-s010"].contains(agentName))

        prepared_node_tests[ agentName ] = {
            build job: '/System/Instrument/Development_and_tests/Tai_dev/Single_build_job',
            parameters: [
                string(name: 'TEST_AGENT_LABEL', value: agentName),
            ]
        }
    }
}


pipeline {
    agent { label "_runner:linux" }

    stages {
        stage('Kick-off agents') {
            steps {
                script {
                    prepare_all_nodes_for_test("_ldx2_")

                    prepared_node_tests.each { k,v ->
                        println "Got key ${k}"
                    }

                    parallel prepared_node_tests
                }
            }
        }
    }
}

